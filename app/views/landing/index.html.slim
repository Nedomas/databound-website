.row
  .container
    .fork.text-right
      a.btn.btn-default href='https://github.com/Nedomas/databound' target='_blank'
        span.glyphicon.glyphicon-star
        |  Star on Github

.row
  .col-md-8.col-md-offset-2
    .header
      .logo
      .description.text-center
        span.brand Databound
        span
          |  provides Javascript a simple API to the Ruby on Rails CRUD.

.row
  .showoff
    .col-md-6.col-md-offset-1.col-xs-6.col-md-offset-1
      #editor-part
        div role="tabpanel"
          /! Nav tabs
          ul.nav.nav-tabs role="tablist"
            li.active role="presentation"
              a aria-controls="javascript-tab" data-toggle="tab" href="#javascript-tab" role="tab" JavaScript
            li role="presentation"
              a aria-controls="routes-tab" data-toggle="tab" href="#routes-tab" role="tab" config/routes.rb
            li role="presentation"
              a aria-controls="controller-tab" data-toggle="tab" href="#controller-tab" role="tab" users_controller.rb
            li role="presentation"
              a aria-controls="gemfile-tab" data-toggle="tab" href="#gemfile-tab" role="tab" Gemfile
            .run-area.text-right
              button.btn.btn-danger#run
                span.glyphicon.glyphicon-play aria-hidden='true'
                |  Run

          /! Tab panes
          .tab-content
            #javascript-tab.tab-pane.active role="tabpanel"
              .editor#javascript
            #routes-tab.tab-pane role="tabpanel"
              .editor#routes
            #controller-tab.tab-pane role="tabpanel"
              .editor#controller
            #gemfile-tab.tab-pane role="tabpanel"
              .editor#gemfile

    .col-md-1.spacer.no-gutter.col-xs-1
    .col-md-4.col-xs-5
      pre
        #browser

.row
  .content
    .container.cta
      .col-md-4.col-md-offset-2.col-sm-6
        a.btn.btn-danger.install href='#installation'
          | Install Databound (v#{DATABOUND_VERSION})
        h6.minimized.text-center 2.8K minimized
      .col-md-4.col-sm-6
        a.btn.btn-danger.closeheat href='http://app.closeheat.com/apps/template?github=closeheat/template-databound' target='_blank'
          | <b>Deploy New App</b> with Databound & React.js
        h6.minimized.text-center Takes 30 seconds

.row.used-by
  .content
    .container.text-center
      h2
        | Used by
      .row
        a href='http://www.closeheat.com' target='_blank'
          .closeheat.logo
        a href='http://www.samesystem.com' target='_blank'
          .samesystem.logo
        a href='http://spacepicnic.net' target='_blank'
          .spacepicnic.logo

.row.api.dark
  .container
    .row.text-center
      h2 API
    .row.example
      .col-md-offset-1.col-md-3.text-right
        h3 where
      .col-md-5
        pre
          | User.where({ name: 'John' }).then(function(users) {
             print('Users called John');
            });

    .row.example
      .col-md-offset-1.col-md-3.text-right
        h3 find
      .col-md-5
        pre
          | User.find(15).then(function(user) {
             print('User no. 15: ' + user.name);
            });

    .row.example
      .col-md-offset-1.col-md-3.text-right
        h3 findBy
      .col-md-5
        pre
          | User.findBy({ name: 'Peter' }).then(function(user) {
          br
          |  print('Peter from ' + user.city);
          br
          | });

    .row.example
      .col-md-offset-1.col-md-3.text-right
        h3 create
      .col-md-5
        pre
          | User.create({ name: 'Peter' }).then(function(user) {
             print('I am ' + user.name + ' from database');
            });

    .row.example
      .col-md-offset-1.col-md-3.text-right
        h3 update
      .col-md-5
        pre
          | User.update({ id: 15, name: 'Nikki' }).then(function(user) {
              // I'm not Peter anymore, I'm Nikki
              print("I'm not Peter anymore, I'm " + user.name);
            });

    .row.example
      .col-md-offset-1.col-md-3.text-right
        h3 destroy
      .col-md-5
        pre
          | User.destroy(15).then(function(resp) {
              if (resp.success) print('User no. 15 is now gone');
            });

    .row.more-api
      .col-md-10.col-md-offset-1.text-center
        a.btn.btn-lg.btn-danger href='http://nedomas.github.io/databound/src/databound.html' target='_blank'
          | ALL API DOCS
        h6.whats-in-more
          | <code>all</code>, <code>take</code> & <code>takeAll</code> methods,
          |  <code>API_URL</code>, seed records and how to use it without jQuery.

.row.features.dark
  .container
    .row.text-center
      h2 Features

    .row.example
      .col-md-offset-2.col-md-3.text-left
        h3#columns Columns
        p
          | By default no columns are modifiable.
        p
          strong
            | It will raise an error if an unpermitted column is requested.
        p
          | All table columns are allowed if <code>:table_columns</code> is specified.
        p
          | <code>:all</code> can be used with DSL to convert non-existing field into another.
        p
          | ActiveRecord and Mongoid supported.

      .col-md-5
        pre
          | class UsersController < ApplicationController
              databound do
                model :user
                columns :name, :city
              end
            end

            # if you don't have a controller
            # you can also specify permitted columns in

            # config/routes.rb
            Rails.application.routes.draw do
              databound :users, columns: [:name, :city]
            end

    .row.example
      .col-md-offset-2.col-md-3.text-left
        h3#permit Permit actions
        p
          | You can check for the record edit rights.
        p
          strong
            | It will raise an error if <code>permit</code> block resolves to false.
        p
          strong CRUD actions are supported:
          p
            code create
          p
            code read
          p
            code update
          p
            code destroy

      .col-md-5
        pre
          | class ProjectsController < ApplicationController
              databound do
                model :project
                columns :name, :city

                permit(:update, :destroy) do |params, record|
                  record.user_id == current_user.id
                end
              end
            end

    .row.example
      .col-md-offset-2.col-md-3.text-left
        h3#dsl DSL
        p
          | You can setup <span class='brand'>Databound</span> to treat certain Javascript side input
          |  values as DSL.
        p
          strong
            | <code>strict</code> setting:
        p
          | set <code>false</code> to make both dsl values and other values
          |  valid.
      .col-md-5
        strong Javascript
        pre
          | Project = new Databound('/projects', {
              user_id: 'current'
            });

            Project.create({ title: 'Ship' })
              .then(function(project) {

              alert('Ship of current user: ' + project.user_id);
            });

        strong app/controllers/projects_controller.rb
        pre
          | class ProjectsController < ApplicationController
              databound do
                model :project
                columns :title, :user_id

                dsl(:user_id, :current) do |params|
                  current_user.id
                end
              end
            end

    .row.example
      .col-md-offset-2.col-md-3.text-left
        h3#model Model
        p
          | You can specify model both in controller and in <code>routes.rb</code>.

      .col-md-5
        pre
          | class UsersController < ApplicationController
              databound do
                model :project
              end
            end

            # if you don't have a controller
            # you can also specify permitted columns in

            # config/routes.rb
            Rails.application.routes.draw do
              databound :users, model: :project
            end

            # you can also specify it in this style
            class UsersController < ApplicationController
              databound(:project) do
              end
            end

    .row.example
      .col-md-offset-2.col-md-3.text-left
        h3 Friendly errors in development
        p
          | If <code>consider_all_requests_local</code>
          |  is on,
          |  <span class='brand'>Databound</span> will show friendly
          |  errors to the Javascript.
        p
          | Its default is <code>true</code> in development and
          |  <code>false</code> in production for Ruby on Rails.
        p
          strong Friendly error types:
        p Unpermitted columns
        p Permit violations
        p ORM errors
        /p
        /  | It will not show standard <code>Something went wrong</code> in the
        /  | production environment.

      .col-md-5
        strong config/environments/development.rb
        pre
          | Rails.application.configure do
              config.consider_all_requests_local = true
            end

        strong Javascript
        pre
          | // Request includes unpermitted columns: email
            User.update({ id: 15 email: 'hello@databound.me' })

            // Request for destroy not permitted
            User.destroy(15)

            // Couldn't find record with id: 1
            User.find(1)

        strong config/environments/production.rb
        pre
          | Rails.application.configure do
              config.consider_all_requests_local = false
            end

        strong Javascript
        pre
          | // Error in the backend with status 500
            User.update({ id: 15 email: 'hello@databound.me' })

            // Error in the backend with status 500
            User.destroy(15)

            // Couldn't find record with id: 1
            User.find(1)

    .row.example
      .col-md-offset-2.col-md-3.text-left
        h3 Scope
        p
          | You can specify <strong>default attributes</strong> that will be
          |  inserted on every query to the backend.
        p
          | It helps to keep the code dry, because most of the time you know some
          |  model attributes when you define a connection.

      .col-md-5
        pre
          | MiamiUser = new Databound('/users', { city: 'Miami' });

            MiamiUser.create({ name: 'Nikki' }).then(function(user) {
              // Miami
              print(user.city);
            });

    .row.example
      .col-md-offset-2.col-md-3.text-left
        h3 Extra where scopes
        p
          | You can default connection attribute values if you are constantly repeating them.
        p
          strong
            | They are only used when selecting and not when creating.
      .col-md-5
        pre
          | var User = new Databound('/users',
              { city: 'Miami' },
              { extra_where_scopes: [{ city: 'New york' }] }
            );

            User.create({ name: 'Nikki' }).then(function() {
              // ['Miami', 'New york']
              print(User.takeAll());
            });


.row.security
  .container
    .col-md-offset-2.col-md-8
      .row.bs-callout.bs-callout-danger
        h2 Security
        p
          strong Which parts can Javascript modify?
        p
          | Specify <a href='#columns'><code>columns</code></a>.
        p
          | By default - no columns are modifiable.

        p
          strong How to secure the relation values?
        p
          | You can use <a href='#dsl'><code>dsl(:your_column, :expected_value)</code></a> to only allow certain dsl values
          |  and convert them to relation ids in the backend.

        p
          strong How to protect the scope of the records?
        p
          | If you need a reference to the record being modified, use
          |  <a href='#permit'><code>permit</code></a>.
          |  It will give you a parsed record.
        p
          | It also works with 3rd party libraries.
        pre
          | class ProjectsController < ApplicationController
              databound do
                model :project
                columns :name, :city

                # CanCanCan gem
                permit(:create) do
                  authorize! :create, current_user
                end

                # Pundit
                permit(:update) do
                  authorize current_user
                end

                # Plain Ruby
                permit(:destroy) do
                  current_user.god?
                end
              end
            end

        p
          strong Which parts can Javascript show?
        p
          | Use <a href='https://github.com/rails-api/active_model_serializers' target='_blank'>Active Model Serializers</a> to serialize the record.
        p
          | If you don't want to use that, you can overwrite <code>as_json</code> method on the model.

.row.support
  .container
    .col-md-offset-2.col-md-8
      .row.text-center
        h2 Version support and dependencies
      .row
        .lead
          p
            strong Works with:
          p Ruby on Rails <span class="label label-default">3+</span>
          p Ruby <span class="label label-default">2.0+</span>
          p It can work with <strong>Angular</strong> as a better solution over <strong>ngResource</strong>.
          p ActiveRecord or Mongoid
          p <a href='https://github.com/rails-api/rails-api' target='_blank'>Rails API</a>
          p <a href='https://github.com/rails-api/active_model_serializers' target='_blank'>Active Model Serializers</a>
          p Chrome <span class="label label-default">any</span>, Firefox <span class="label label-default">any</span>, Opera <span class="label label-default">any</span>, IE <span class="label label-default">8+</span>

          p
            strong Depends on:
          p
            | <a href='https://lodash.com' target='_blank'>Lo-Dash</a>
            small
              em
                |  <span class="label label-default">(should work with any version)</span>
          p
            | <a href='http://jquery.com' target='_blank'>jQuery</a>
            small
              em
                |  <span class="label label-default">1.5+</span>
          small
            p
              strong jQuery
              |  is used for making requests and promises.
            p
              | You can use your own library instead.
              |  Read <a href='http://nedomas.github.io/databound/src/databound.html' target='_blank'>API docs</a>
              |  on how to override those.

.row.installation#installation
  .container
    .col-md-offset-2.col-md-8
      .row
        h2 Installation
      .row
        #accordion.panel-group aria-multiselectable="true" role="tablist"
          .panel.panel-default
            #headingOne.panel-heading role="tab"
              h4.panel-title
                a aria-controls="collapseOne" aria-expanded="true" data-parent="#accordion" data-toggle="collapse" href="#collapseOne"
                  | With asset pipeline (sprockets)
            #collapseOne.panel-collapse.collapse.in aria-labelledby="headingOne" role="tabpanel"
              .panel-body
                .step
                  h4
                    span.label.label-danger 1
                    span.text  Gemfile
                  pre
                    | gem 'databound', '#{DATABOUND_VERSION}'

                .step
                  h4
                    span.label.label-danger 2
                    span.text  Run generator to add Databound to <code>application.js</code>
                  pre
                    | rails g databound:install

                .step
                  h4
                    span.label.label-danger 3
                    span.text  Add a route to <code>config/routes.rb</code>
                  pre
                    | Rails.application.routes.draw do
                    br
                    |   databound :users, columns: [:name, :city]
                    br
                    | end

                .step
                  h4
                    span.label.label-danger 4 - optional
                    span.text
                      |  Controller is autogenerated from route
                  p But if you already have a controller, you can include Databound and specify the model yourself.
                  pre
                    | class UsersController < ApplicationController
                        databound do
                          model :user
                          columns :name, :city
                        end
                      end

                .step
                  h4
                    span.label.label-danger 5
                    span.text
                      |  Install dependencies
                  p Easiest way is to use the official Ruby gems or include them from CDNs.
                  h5
                    strong Lo-Dash
                  p
                    | <code><a href='https://github.com/rh/lodash-rails' target='_blank'>lodash-rails gem</a></code>
                    |  or <a href='http://cdnjs.com/libraries/lodash.js' target='_blank'>CDN</a>

                  h5
                    strong jQuery (already installed by default on Rails)
                  p
                    | <code><a href='https://github.com/rails/jquery-rails' target='_blank'>jquery-rails gem</a></code>
                    |  or <a href='https://code.jquery.com' target='_blank'>CDN</a>

                .step
                  h4
                    span.label.label-danger 6
                    span.text
                      |  Use it in the Javascript
                  pre
                    | var User = new Databound('/users');

          .panel.panel-default
            #headingTwo.panel-heading role="tab"
              h4.panel-title
                a.collapsed aria-controls="collapseTwo" aria-expanded="false" data-parent="#accordion" data-toggle="collapse" href="#collapseTwo"
                  | Without asset pipeline
            #collapseTwo.panel-collapse.collapse aria-labelledby="headingTwo" role="tabpanel"
              .panel-body
                .step
                  h4
                    span.label.label-danger 1
                    span.text  Gemfile
                  pre
                    | gem 'databound', '#{DATABOUND_VERSION}'

                .step
                  h4
                    span.label.label-danger 2
                    span.text  Download the <a href="#{asset_path('databound.js')}" target='_blank'><code>databound.js</code></a> and load it up
                  pre
                    = "<script src='assets/databound.js'></script>"

                .step
                  h4
                    span.label.label-danger 3
                    span.text  Add a route to <code>config/routes.rb</code>
                  pre
                    | Rails.application.routes.draw do
                    br
                    |   databound :users, columns: [:name, :city]
                    br
                    | end

                .step
                  h4
                    span.label.label-danger 4 - optional
                    span.text
                      |  Controller is autogenerated from route
                  p But if you already have a controller, you can include Databound and specify the model yourself.
                  pre
                    | class UsersController < ApplicationController
                        databound do
                          model :user
                          columns :name, :city
                        end
                      end

                .step
                  h4
                    span.label.label-danger 5
                    span.text
                      |  Install dependencies
                  p Include them from CDNs.
                  h5
                    strong <a href='https://lodash.com' target='_blank'>Lo-Dash</a>
                  pre
                    = "<script src='https://cdnjs.cloudflare.com/ajax/libs/lodash.js/2.4.1/lodash.min.js'>"
                    br
                    = "</script>"

                  h5
                    strong <a href='https://jquery.com' target='_blank'>jQuery</a> (already installed by default on Rails)
                  pre
                    = "<script src='https://code.jquery.com/jquery-2.1.3.min.js'>"
                    br
                    = "</script>"

                .step
                  h4
                    span.label.label-danger 6
                    span.text
                      |  Use it in the Javascript
                  pre
                    | var User = new Databound('/users');

          .panel.panel-default
            #headingThree.panel-heading role="tab"
              h4.panel-title
                a.collapsed aria-controls="collapseThree" aria-expanded="false" data-parent="#accordion" data-toggle="collapse" href="#collapseThree"
                  | With require.js
            #collapseThree.panel-collapse.collapse aria-labelledby="headingThree" role="tabpanel"
              .panel-body
                .step
                  h4
                    span.label.label-danger 1
                    span.text  Gemfile
                  pre
                    | gem 'databound', '#{DATABOUND_VERSION}'

                .step
                  h4
                    span.label.label-danger 2
                    span.text  Download Javascript part with <a href='https://www.npmjs.com' target='_blank'><code>npm</code></a> or <a href='http://bower.io' target='_blank'><code>bower</code></a>
                  pre
                    | npm install databound
                  p OR
                  pre
                    | bower install databound

                .step
                  h4
                    span.label.label-danger 3
                    span.text  Add a route to <code>config/routes.rb</code>
                  pre
                    | Rails.application.routes.draw do
                    br
                    |   databound :users, columns: [:name, :city]
                    br
                    | end

                .step
                  h4
                    span.label.label-danger 4 - optional
                    span.text
                      |  Controller is autogenerated from route
                  p But if you already have a controller, you can include Databound and specify the model yourself.
                  pre
                    | class UsersController < ApplicationController
                        databound do
                          model :user
                          columns :name, :city
                        end
                      end

                .step
                  h4
                    span.label.label-danger 5
                    span.text
                      |  Require and use it in the Javascript
                  pre
                    | var Databound = require('databound');
                      var User = new Databound('/users');
